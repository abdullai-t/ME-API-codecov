# Generated by Django 2.2.5 on 2019-10-14 13:22

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CarbonCalculatorMedia',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('file', models.FileField(upload_to='cc_media/')),
                ('is_deleted', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'cc_media_files',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=40, unique=True)),
                ('displayname', models.CharField(blank=True, max_length=40)),
                ('description', models.CharField(blank=True, max_length=100)),
                ('members', models.PositiveIntegerField(default=0)),
                ('points', models.PositiveIntegerField(default=0)),
                ('savings', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
            ],
            options={
                'db_table': 'cc_groups',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=40, unique=True)),
                ('category', models.CharField(blank=True, max_length=100)),
                ('question_text', models.CharField(max_length=200)),
                ('question_type', models.CharField(choices=[('C', 'Choice'), ('T', 'Text'), ('N', 'Number')], default='C', max_length=15)),
                ('response_1', models.CharField(max_length=100, null=True)),
                ('skip_1', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('response_2', models.CharField(max_length=100, null=True)),
                ('skip_2', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('response_3', models.CharField(max_length=100, null=True)),
                ('skip_3', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('response_4', models.CharField(max_length=100, null=True)),
                ('skip_4', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('response_5', models.CharField(max_length=100, null=True)),
                ('skip_5', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('response_6', models.CharField(max_length=100, null=True)),
                ('skip_6', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cc_questions',
            },
        ),
        migrations.CreateModel(
            name='Station',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=40, unique=True)),
                ('displayname', models.CharField(blank=True, max_length=40)),
                ('description', models.CharField(max_length=100)),
                ('actions', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('icon', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cc_station_icon', to='carbon_calculator.CarbonCalculatorMedia')),
            ],
            options={
                'db_table': 'cc_stations',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=40, unique=True)),
                ('displayname', models.CharField(blank=True, max_length=40)),
                ('datetime', models.DateTimeField(blank=True)),
                ('location', models.CharField(blank=True, max_length=100)),
                ('stationslist', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('host_org', models.CharField(blank=True, max_length=100)),
                ('host_contact', models.CharField(blank=True, max_length=100)),
                ('host_email', models.EmailField(max_length=254)),
                ('host_phone', models.CharField(blank=True, max_length=15)),
                ('host_url', models.URLField(blank=True)),
                ('sponsor_org', models.CharField(blank=True, max_length=100)),
                ('sponsor_url', models.URLField(blank=True)),
                ('groups', models.ManyToManyField(blank=True, to='carbon_calculator.Group')),
                ('host_logo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='event_host_logo', to='carbon_calculator.CarbonCalculatorMedia')),
                ('sponsor_logo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='event_sponsor_logo', to='carbon_calculator.CarbonCalculatorMedia')),
            ],
            options={
                'db_table': 'cc_events',
            },
        ),
        migrations.CreateModel(
            name='CalcUser',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=100, null=True)),
                ('last_name', models.CharField(max_length=100, null=True)),
                ('email', models.EmailField(db_index=True, max_length=100, unique=True)),
                ('town', models.CharField(max_length=100, null=True)),
                ('minimum_age', models.BooleanField(blank=True, default=False)),
                ('accepts_terms_and_conditions', models.BooleanField(blank=True, default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, to='carbon_calculator.Group')),
            ],
            options={
                'db_table': 'cc_user_profiles',
            },
        ),
        migrations.CreateModel(
            name='ActionPoints',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('action', models.CharField(blank=True, max_length=40)),
                ('choices', django.contrib.postgres.fields.jsonb.JSONField(blank=True)),
                ('points', models.IntegerField(default=0)),
                ('cost', models.IntegerField(default=0)),
                ('savings', models.IntegerField(default=0)),
                ('user_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='carbon_calculator.CalcUser')),
            ],
            options={
                'db_table': 'cc_action_points',
            },
        ),
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=40, unique=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('description', models.CharField(blank=True, max_length=100)),
                ('helptext', models.CharField(blank=True, max_length=200)),
                ('average_points', models.PositiveIntegerField(default=0)),
                ('questions', django.contrib.postgres.fields.jsonb.JSONField(blank=True)),
                ('picture', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cc_action_picture', to='carbon_calculator.CarbonCalculatorMedia')),
            ],
            options={
                'db_table': 'cc_actions',
            },
        ),
    ]
