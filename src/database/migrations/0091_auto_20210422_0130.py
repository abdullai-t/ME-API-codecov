# Generated by Django 3.0.14 on 2021-04-22 01:30

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('database', '0090_auto_20210406_1301'),
    ]

    operations = [
        migrations.AddField(
            model_name='userprofile',
            name='last_visited',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='num_visits',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='visit_history',
            field=django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True),
        ),
        migrations.CreateModel(
            name='IpProfile',
            fields=[
                ('ip_address', models.GenericIPAddressField(primary_key=True, serialize=False)),
                ('client', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(blank=True, default=False)),
                ('last_visited', models.DateTimeField(blank=True, null=True)),
                ('num_visits', models.PositiveIntegerField(default=0)),
                ('visit_history', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('community', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='database.Community')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='database.Location')),
            ],
            options={
                'db_table': 'ip_profiles',
            },
        ),
        migrations.AddField(
            model_name='userprofile',
            name='unique_ip_addresses',
            field=models.ManyToManyField(null=True, to='database.IpProfile'),
        ),
    ]
